{
    "scopeName": "ts.nodom",
    "injectionSelector": "L:meta.class.ts",
    "patterns": [{
            "include": "#expression"
        }, {
            "include": "#templateStr"
        }

    ],
    "repository": {
        "return": {
            "match": "(?<=.*)return(?=[\\\"'`\\s]*)",
            "name": "keyword.control.flow.ts"
        },
        "keyword": {
            "match": "(if|else|else if|while|switch|case|let|const|break|continue)",
            "name": "keyword.control.conditional"
        },
        "templateStr": {
            "begin": "template.*=\\s*`",
            "end": "`",
            "name": "meta.embedded.*",
            "patterns": [{
                "include": "#comment"
            }, {
                "include": "#doubleTag"
            }, {
                "include": "#text"
            }]
        },
        "expression": {
            "begin": "template.*\\{",
            "end": "\\s*\\}(?!\\s*\\w)",

            "patterns": [{
                "include": "#start"
            }, {
                "include": "#return"
            }, {
                "include": "#keyword"
            }]
        },
        "start": {
            "begin": "`",
            "end": "`",
            "name": "meta.embedded.*",
            "patterns": [{
                "include": "#comment"
            }, {
                "include": "#doubleTag"
            },  {
                "include": "#text"
            }]
        },
        "attributes": {
            "match": "([\\w\\-\\:]+)(\\s*\\=\\s*)(\\\".+?\\\"|\\'.+?\\'|\\`.+?\\`|(\\{{2}.+?\\}{2}(?!\\}))|(\\w+))|([\\w\\-]+)|(\\/.*)",
            "captures": {
                "1": {
                    "name": "entity.other.attribute-name.ts"
                },
                "2": {
                    "name": "keyword.operator.assignment.ts"
                },
                "3": {
                    "name": "punctuation.definition.string.end.ts"
                },
                "4": {
                    "patterns": [{
                        "include": "#text"
                    }]
                },
                "5": {
                    "name": "punctuation.definition.string.end.ts"
                },
                "6": {
                    "name": "entity.other.attribute-name.ts"
                },
                "7":{
                    "patterns": [{
                        "include": "#module"
                    }]
                }
            }
        },
        "doubleTag": {
            "match":"(?<=.*)<([\\w-]*)(((\\{{2}.+\\}{2}(?!\\})|[\\s\\w=-]+|\\\".+?\\\"|\\'.+?\\'|\\`.+?\\`|(\/[^><\\s]*))*))>(((\\{{2}.+\\}{2}|.+?)*)<\/(.+)>|(?!.*<\/))" ,
            "name": "test",
            "captures": {
                "1": {
                    "patterns": [{
                        "include": "#module"
                    }]
                },
                "3": {
                    "patterns": [{
                        "include": "#attributes"
                    }]
                },
                "5":{
                    "patterns": [{
                        "include": "#module"
                    }]
                },
                "7": {
                    "patterns": [{
                        "include": "#text"
                    }, {
                        "include": "#doubleTag"
                    }]
                },
                "8": {
                    "patterns": [{
                        "include": "#module"
                    }]
                },
                "9": {
                    "patterns": [{
                        "include": "#module"
                    }]
                }
            }

        },
        "startTags": {
            "match": "(?<![\\S]+\\s*)<(([^><!\/\\s]+)((\\{{2}.+\\}{2}(?!\\})|[^><,\\\"\\'\\`\\{]+|\\\".+?\\\"|\\'.+?\\'|\\`.+?\\`)*)|(\/[^><\\s]*))>(?!.*<\/)",
            "name": "st",
            "captures": {
                "2": {
                    "patterns": [{
                        "include": "#module"
                    }]
                },

                "3": {
                    "patterns": [{
                        "include": "#attributes"
                    }]
                },
                "5": {
                    "patterns": [{
                        "include": "#module"
                    }]
                }
            }

        },
        "module": {
            "match": "(([A-Z][^>\/\\s]+)|([^>\/\\s]+))",
            "name": "md",
            "captures": {
                "2": {
                    "name": "entity.name.type.class.ts"
                },
                "3": {
                    "name": "entity.name.tag.ts"
                }
            }
            
        },
        "text": {
            "match": "(\\w*(\\{{2})(.+?)(\\}{2}(?!\\}))\\w*|(e-\\w+)|(x-\\w+))",
            "captures": {
                "2": {
                    "name": "entity.name.function"
                },
                "3": {
                    "name": "markup.italic"
                },
                "4": {
                    "name": "entity.name.function"
                }
            },
            "name": "text"
        },
        "comment": {
            "begin": "(?<=.*)(<!--)(.*)",
            "end": "(.*)(-->)(?=.*)",
            "name": "comment.block",
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment"
                },
                "2": {
                    "name": "punctuation.definition.comment"
                }
            }
        }
    }
}